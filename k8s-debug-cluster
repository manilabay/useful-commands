#DEBUG CLUSTER

kubectl cluster-info

kubectl config view

#for users and secrets
kubectl describe secret


#check the k8s system 
kubectl get pods --namespace=kube-system
It should show something like:
NAME                                         READY     STATUS    RESTARTS   AGE
etcd-docker-for-desktop                      1/1       Running   0          1d
kube-apiserver-docker-for-desktop            1/1       Running   0          1d
kube-controller-manager-docker-for-desktop   1/1       Running   0          1d
kube-dns-6f4fd4bdf-kqqkk                     3/3       Running   0          1d
kube-proxy-chz7r                             1/1       Running   0          1d
kube-scheduler-docker-for-desktop            1/1       Running   0          1d

#main logs to check

#Master
/var/log/kube-apiserver.log - API Server, responsible for serving the API
/var/log/kube-scheduler.log - Scheduler, responsible for making scheduling decisions
/var/log/kube-controller-manager.log - Controller that manages replication controllers

#Worker Nodes
/var/log/kubelet.log - Kubelet, responsible for running containers on the node
/var/log/kube-proxy.log - Kube Proxy, responsible for service load balancing

#TO-DO build the grep -e command with the list of kubernetes common errors to fish
grep -R -e "error|critical|warning" /var/log/kube*

#get cluster nodes
kubectl get nodes

#describe cluter node
kubectl describe node docker-for-desktop

#describe the events for a pod
kubectl describe pod my-nginx | grep -A 3 Events

#check resources 
kubectl get pod -o go-template='{{range.status.containerStatuses}}{{"Container Name: "}}{{.name}}{{"\r\nLastState: "}}{{.lastState}}{{end}}'  pod-name

#check a replication controller
kubectl describe rc ${CONTROLLER_NAME}
